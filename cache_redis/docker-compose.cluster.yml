version: "3"
services:
  tunnel:
    image: dbluhm/agent-tunnel
    command: -s reverse-proxy:80 -p 4040 -h ${AGENT_TUNNEL_HOST}
    ports:
      - 4040:4040
    networks:
      - acapy_default
  agent:
    image: acapy-cache-redis
    build:
      context: ./
      dockerfile: ./docker/Dockerfile
    depends_on:
      - redis-cluster
    links:
      - redis-cluster
      - reverse-proxy
    ports:
      - 3000:3000
      - 3001:3001
    volumes:
      - ./acapy-endpoint.sh:/acapy-endpoint.sh:ro,z
      - ./acapy_cache_redis:/home/indy/acapy_cache_redis:ro,z
      - ./docker/default_cluster.yml:/home/indy/default.yml:ro,z
    environment:
      TUNNEL_ENDPOINT: http://tunnel:4040
    entrypoint: >
      /bin/sh -c '/acapy-endpoint.sh poetry run aca-py "$$@"' --
    command: >
      start --arg-file default.yml
    networks:
      - acapy_default
  reverse-proxy:
    image: nginx:alpine
    restart: unless-stopped
    environment:
      AGENT_HTTP: "agent:3000"
      AGENT_WS: "agent:3002"
    ports:
      - 80:80
    volumes:
      - ./nginx.conf.template:/etc/nginx/templates/default.conf.template:z
    networks:
      - acapy_default
  redis-cluster:
    image: redis:latest
    container_name: cluster
    command: redis-cli --cluster create 172.28.0.101:6377 172.28.0.102:6378 172.28.0.103:6379 172.28.0.104:6380 172.28.0.105:6381 172.28.0.106:6382 --cluster-replicas 1 --cluster-yes
    environment:
      - REDISCLI_AUTH=${REDIS_PASSWORD}
    networks:
      acapy_default:
        ipv4_address: 172.28.0.107
    depends_on:
      - redis-node-1
      - redis-node-2
      - redis-node-3
      - redis-node-4
      - redis-node-5
      - redis-node-6
  redis-node-1:
    image: redis:latest
    container_name: node1
    command: [ "redis-server", "/conf/redis.conf", "--port 6377" ]
    environment:
      - REDISCLI_AUTH=${REDIS_PASSWORD}
    ports:
      - 6377:6377
    volumes:
      - ./redis_cluster.conf:/conf/redis.conf
    networks:
      acapy_default:
        ipv4_address: 172.28.0.101
  redis-node-2:
    image: redis:latest
    container_name: node2
    command: [ "redis-server", "/conf/redis.conf", "--port 6378" ]
    environment:
      - REDISCLI_AUTH=${REDIS_PASSWORD}
    ports:
      - 6378:6378
    volumes:
      - ./redis_cluster.conf:/conf/redis.conf
    networks:
      acapy_default:
        ipv4_address: 172.28.0.102
  redis-node-3:
    image: redis:latest
    container_name: node3
    command: [ "redis-server", "/conf/redis.conf", "--port 6379" ]
    environment:
      - REDISCLI_AUTH=${REDIS_PASSWORD}
    ports:
      - 6379:6379
    volumes:
      - ./redis_cluster.conf:/conf/redis.conf
    networks:
      acapy_default:
        ipv4_address: 172.28.0.103
  redis-node-4:
    image: redis:latest
    container_name: node4
    command: [ "redis-server", "/conf/redis.conf", "--port 6380" ]
    environment:
      - REDISCLI_AUTH=${REDIS_PASSWORD}
    ports:
      - 6380:6380
    volumes:
      - ./redis_cluster.conf:/conf/redis.conf
    networks:
      acapy_default:
        ipv4_address: 172.28.0.104
  redis-node-5:
    image: redis:latest
    container_name: node5
    command: [ "redis-server", "/conf/redis.conf", "--port 6381" ]
    environment:
      - REDISCLI_AUTH=${REDIS_PASSWORD}
    ports:
      - 6381:6381
    volumes:
      - ./redis_cluster.conf:/conf/redis.conf
    networks:
      acapy_default:
        ipv4_address: 172.28.0.105
  redis-node-6:
    image: redis:latest
    container_name: node6
    command: [ "redis-server", "/conf/redis.conf", "--port 6382" ]
    environment:
      - REDISCLI_AUTH=${REDIS_PASSWORD}
    ports:
      - 6382:6382
    volumes:
      - ./redis_cluster.conf:/conf/redis.conf
    networks:
      acapy_default:
        ipv4_address: 172.28.0.106
networks:
  acapy_default:
    external: true
    name: ${NETWORK_NAME}
