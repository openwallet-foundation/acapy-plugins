[tool.poetry]
name = "redis_events"
version = "0.1.0"
description = "ACA-PY persisted events using Redis (Supported acapy-agent version: 1.2.0) "
authors = ["Shaanjot Gill <gill.shaanjots@gmail.com>"]

[tool.poetry.dependencies]
python = "^3.12"

# Define ACA-Py as an optional/extra dependency so it can be
# explicitly installed with the plugin if desired.
acapy-agent = { version = "~1.2.0", optional = true }

aiohttp = "^3.11.11"
fastapi-slim = "^0.115.6"
nest-asyncio = "^1.5.5"
redis = "^5.2.1"
uvicorn = "^0.32.1"
pydantic = "^2.10.5"

[tool.poetry.extras]
aca-py = ["acapy-agent"]

[tool.poetry.dev-dependencies]
ruff = "^0.9.2"
pytest = "^8.3.3"
pytest-asyncio = "^0.25.2"
pytest-cov = "^5.0.0"
pytest-ruff = "^0.4.1"
pre-commit = "^2.12.1"
rope = "^1.13.0"

[tool.poetry.group.integration.dependencies]
aries-askar = { version = "~0.3.2" }
indy-credx = { version = "~1.1.1" }
indy-vdr = { version = "~0.4.1" }
python3-indy = { version = "^1.11.1" }
anoncreds = { version = "0.2.0" }

[tool.ruff]
line-length = 90

[tool.ruff.lint]
select = ["E", "F", "C", "D"]
ignore = [
    # Google Python Doc Style
    "D203",
    "D204",
    "D213",
    "D215",
    "D400",
    "D401",
    "D404",
    "D406",
    "D407",
    "D408",
    "D409",
    "D413",
    "D202", # Allow blank line after docstring
    "D104", # Don't require docstring in public package
    # Things that we should fix, but are too much work right now
    "C901",
]

[tool.ruff.lint.per-file-ignores]
"**/{tests}/*" = ["F841", "D", "E501"]

[tool.pytest.ini_options]
testpaths = "redis_events"
addopts = """
    -p no:warnings
    --quiet --junitxml=./.test-reports/junit.xml
    --cov-config .coveragerc --cov=redis_events --cov-report term --cov-report xml
"""
markers = []
junit_family = "xunit1"
asyncio_mode = "auto"

[tool.coverage.run]
omit = ["*/tests/*", "docker/*", "integration/*", "*/definition.py"]
data_file = ".test-reports/.coverage"

[tool.coverage.report]
exclude_lines = ["pragma: no cover", "@abstract"]
precision = 2
skip_covered = true
show_missing = true

[tool.coverage.xml]
output = ".test-reports/coverage.xml"

[build-system]
requires = ["setuptools", "poetry-core>=1.2"]
build-backend = "poetry.core.masonry.api"

