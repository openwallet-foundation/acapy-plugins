name: Integration Tests
on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches:
      - "**"
  push:
    branches:
      - main
  merge_group:

jobs:
  integration-tests:
    name: "Integration Tests"
    runs-on: ubuntu-latest
    if: (github.repository == 'openwallet-foundation/acapy-plugins') && ((github.event_name == 'pull_request' && github.event.pull_request.draft == false) || (github.event_name != 'pull_request'))
    steps:
      #----------------------------------------------
      #       Check out repo
      #----------------------------------------------
      - name: Check out repository
        uses: actions/checkout@v4
      #----------------------------------------------
      #       Get docker compose
      #----------------------------------------------
      - name: Initialize Docker Compose
        uses: isbang/compose-action@v1.5.1
      #----------------------------------------------
      #       Get changed files
      #----------------------------------------------
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v45.0.9
      #----------------------------------------------
      #       Get changed plugins
      #----------------------------------------------
      - name: Get changed plugins
        id: changed-plugins
        run: |

          # Collects all the plugin names that have changes. 
          # If there is directory that isn't a plugin then it will need to skip it. Currently skipping plugin_globals
          declare -a changed_dirs=()
          for dir in ./*/; do
            current_folder=$(basename "$dir")
            if [[ $current_folder == "plugin_globals" ]]; then
              continue
            fi
            for changed_file in ${{ steps.changed-files.outputs.all_changed_files }}; do
              if [[ $changed_file == *"$current_folder"* ]]; then
                if ! [[ ${changed_dirs[*]} =~ $current_folder ]]; then
                  changed_dirs+=("$current_folder")
                fi
              fi
            done
          done

          # Remove any lite plugins from the changed_dirs array
          readarray -t lite_plugin_array < lite_plugins

          echo "${changed_dirs[@]}"
          echo "${lite_plugin_array[@]}"
          # Function to remove items in array2 from array1
          remove_items() {
              local -n source_array=$1
              local -n remove_array=$2
              local temp_array=()

              for item in "${source_array[@]}"; do
                  skip=false
                  for remove_item in "${remove_array[@]}"; do
                      if [[ "$item" == "$remove_item" ]]; then
                          skip=true
                          break
                      fi
                  done
                  if ! $skip; then
                      temp_array+=("$item")
                  fi
              done

              source_array=("${temp_array[@]}")
          }

          remove_items changed_dirs lite_plugin_array

          echo "changed-plugins=${changed_dirs[*]}" >> $GITHUB_OUTPUT

      #----------------------------------------------
      #       Run Integration Tests
      #----------------------------------------------
      - name: Run Integration Tests
        id: integration-tests
        run: |
          for dir in ${{ steps.changed-plugins.outputs.changed-plugins }}; do
            echo "Running integration tests for $dir"
            cd $dir/integration
            docker compose build
            if ! docker compose up --exit-code-from tests; then
              echo "‚ùå Tests failed for $dir - dumping logs:"
              docker compose logs
              docker compose down --remove-orphans
              exit 1
            fi
            docker compose down --remove-orphans
            cd ../..
          done
