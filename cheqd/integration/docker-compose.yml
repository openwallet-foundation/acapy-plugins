services:
  tests:
    container_name: tests
    build:
      context: .
      dockerfile: Dockerfile.test.runner
    environment:
      - ISSUER=http://issuer:3001
      - HOLDER=http://holder:4001
    depends_on:
      issuer:
        condition: service_healthy
      holder:
        condition: service_healthy

  issuer:
    build:
      context: ../
      dockerfile: ./docker/Dockerfile
    ports:
      - "3001:3001"
      - "3002:3002"
    command: >
      start
      --label Issuer
      --inbound-transport http 0.0.0.0 3002
      --outbound-transport http
      --endpoint http://issuer:3002
      --admin 0.0.0.0 3001
      --admin-insecure-mode
      --tails-server-base-url http://tails:6543
      --wallet-type askar-anoncreds
      --wallet-name agency
      --wallet-key insecure
      --auto-provision
      --log-level debug
      --debug-webhooks
      --no-ledger
      --plugin cheqd
      --plugin-config plugin-config-integration.yml
    healthcheck:
      test: curl -s -o /dev/null -w '%{http_code}' "http://localhost:3001/status/live" | grep "200" > /dev/null
      start_period: 30s
      interval: 7s
      timeout: 5s
      retries: 5
    depends_on:
      - did_registrar
      - did_resolver
      - tails
      
  holder:
    build:
      context: ../
      dockerfile: ./docker/Dockerfile
    ports:
      - "4001:4001"
      - "4002:4002"
    command: >
      start
        --label Holder
        --inbound-transport http 0.0.0.0 4002
        --outbound-transport http
        --endpoint http://holder:4002
        --admin 0.0.0.0 4001
        --admin-insecure-mode
        --wallet-type askar-anoncreds
        --wallet-name holder
        --wallet-key insecure
        --auto-provision
        --log-level info
        --debug-webhooks
        --no-ledger
        --plugin cheqd
        --plugin-config plugin-config-integration.yml
    healthcheck:
      test: curl -s -o /dev/null -w '%{http_code}' "http://localhost:4001/status/live" | grep "200" > /dev/null
      start_period: 30s
      interval: 7s
      timeout: 5s
      retries: 5
    depends_on:
      - did_registrar
      - did_resolver

  did_registrar:
    image: ghcr.io/cheqd/did-registrar:production-latest
    ports:
      - target: 3000
        published: 3000
        mode: host
    restart: on-failure
    environment:
      - FEE_PAYER_TESTNET_MNEMONIC=${FEE_PAYER_TESTNET_MNEMONIC}
      - FEE_PAYER_MAINNET_MNEMONIC=${FEE_PAYER_MAINNET_MNEMONIC}

  did_resolver:
    image: ghcr.io/cheqd/did-resolver:latest
    ports:
      - target: 8080
        published: 8080
        mode: host
    restart: on-failure
    environment:
      # Syntax: <grpc-endpoint-url:port>,boolean,time
      # 1st parameter is gRPC endpoint
      # 2nd (Boolean) parameter is whether to use TLS or not
      # 3nd connection timeout
      MAINNET_ENDPOINT: "grpc.cheqd.net:443,true,5s"
      TESTNET_ENDPOINT: "grpc.cheqd.network:443,true,5s"

      # Logging level
      LOG_LEVEL: "warn"

      # Interface and port to listen on in the container
      RESOLVER_LISTENER: "0.0.0.0:8080"

  tails:
    image: ghcr.io/bcgov/tails-server:latest
    platform: linux/amd64
    ports:
      - 6543:6543
    command: >
      tails-server
      --host 0.0.0.0
      --port 6543
      --storage-path /tmp/tails-files
      --log-level info
